#!/bin/bash
HOOKS=""

# Read variables passed on by GIT
read OLDREV NEWREV REFNAME
# Find out basic variables
GIT_EXEC=${GIT_EXEC:-`which git`}
REPO=${REPO:-`basename $PWD`}
NULLREV="0000000000000000000000000000000000000000"
[ "$NEWREV" = "$NULLREV" ] && USER_REV="$OLDREV" || USER_REV="$NEWREV"
USER=`$GIT_EXEC cat-file -p $USER_REV | grep -E '^tagger|^author' | sed -E 's/^(tagger|author) (.*) <.*$/\2/g'`

if [ `$GIT_EXEC cat-file -t $USER_REV` != 'tag' ]; then
  TAG_OR_BRANCH='BRANCH'
  BRANCH=${REFNAME#refs/heads/}
else
  TAG_OR_BRANCH='TAG'
  BRANCH=${REFNAME#refs/tags/}
fi

# Construct message
if [ "$OLDREV" = "$NULLREV" ]; then
  GIT_EVENT='CREATED'
  text=''

elif [ "$NEWREV" = "$NULLREV" ]; then
  GIT_EVENT='DELETED'
  text=''
else
  # Commits pushed to existing branch
  GIT_EVENT='COMMIT'
  COUNT=`$GIT_EXEC log --pretty=oneline $OLDREV..$NEWREV | wc -l | tr -d ' '`
  text=`$GIT_EXEC log $OLDREV..$NEWREV --format="%h: %s - %an"|sed ':a;N;$!ba;s/\n/\\\n/g'`
fi

[ -n "$HOOKS"  ] || {
  echo "Missing env HOOKS:"
  echo "$HOOKS"
  exit 1
}

payload="{\"text\": \"$text\", \"user\": \"$USER\", \"branch\": \"$BRANCH\", \"repo\": \"$REPO\", \"count\": \"$COUNT\" ,\"event\": \"$GIT_EVENT\" ,\"tag_or_branch\": \"$TAG_OR_BRANCH\"}"

curl -fsSL -X "POST" "$HOOKS" \
  -H "Content-Type: application/json" \
  -d "$payload"
